syntax = "proto3";
option go_package = "./;cache";
package rpc;

service Operator {
  // 提交请求
  rpc DCSubmit(DCRequest) returns (DCReply) {}
}

enum OpType{
  get_feature_dim = 0; // client gets feature dim to construct network
  get_features_by_client = 1; // client gets feature by many graph node ids
  get_features_by_peer_server = 2; // peer server gets feature by many graph node ids
  get_cache_info = 3; // client gets cache basic info
  get_statistic = 4; // get cache server's statistic flag value
}

message DCRequest{
    OpType type = 1; // request type
    int64 idx = 2; // graph node idx
    repeated int64 ids = 3; // multiple graph node ids
}

message DCReply{
    bytes features = 1; // feature of one idx
    int64 featdim = 2; // feature dim
    int64 partidx = 3; // part id of gnid cached in this server
    string curaddr = 4; // server addr
    int64 requestnum = 5; // client requests number
    int64 localhitnum = 6; // local hit requests number
    bool statistic = 7; // whether cache server counts cache miss/hit times
    repeated float rfeatures = 8; // features fetched from remote machines
}


/*
cd dist/rpc/cache/ && protoc     --go_out=Mgrpc/service_config/service_config.proto=/internal/proto/grpc_service_config:.    --go-grpc_out=Mgrpc/service_config/service_config.proto=/internal/proto/grpc_service_config:.    --go_opt=paths=source_relative     --go-grpc_opt=paths=source_relative ./distcache.proto

cd rpc_client && python3 -m grpc_tools.protoc --python_out=. --grpc_python_out=. -I. distcache.proto 
*/